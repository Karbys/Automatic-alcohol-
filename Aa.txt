/* LAB 0x06 Ultrasonic sensor Control DC Motor */
const int Motor_1 = D3;               //D3
long distance = 0.0;                //variable distance
/* Sensor */
const int ult_trig = D5;             //D5
const int ult_echo = D6;             //D6

/* Buzzer */
int beep = 4;                           //pin D4

/* Define Function */
long microsecondsToCentimeters(long microseconds);
long ReadSensor(void);
void Beep(int num);

void setup()
{
  //Initial
  Serial.begin(9600);
  pinMode(ult_trig, OUTPUT);          //Setup PIN Mode
  pinMode(ult_echo, INPUT);           //Setup PIN Mode  
  pinMode(Motor_1, OUTPUT);         //Setup PIN Mode Output
  digitalWrite(Motor_1, HIGH);       //Off motor

   pinMode(beep,OUTPUT);            //Buzzer
 
  Serial.println("Start...");  
}

void loop()
{
  distance = ReadSensor();                 //Read Sensor    
  Serial.print("Duration is: ");
  Serial.print(distance);
  Serial.println(" cm.");      
  if(20< distance <30){                               //if distance < 10 cm.  
    digitalWrite(Motor_1, LOW);          //On Motor
    delay(3000);                                     //Delay 3 second
     digitalWrite(Motor_1, HIGH);          //Off Motor
    Beep(2);                                            //On Speaker Buzzer 2 time
  }else{
    digitalWrite(Motor_1, HIGH);          //Off motor
  }
  delay(10);
}
long microsecondsToCentimeters(long microseconds)
{
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the
  // object we take half of the distance travelled.
  return microseconds / 29 / 2;
}

long ReadSensor(void)
{
  long duration, cm;        
  digitalWrite(ult_trig, LOW);
  delayMicroseconds(2);
  digitalWrite(ult_trig, HIGH);                                //Pulse Trig Signal for start measurement.
  delayMicroseconds(5);
  digitalWrite(ult_trig, LOW);
  pinMode(ult_echo, INPUT);
  duration = pulseIn(ult_echo, HIGH);                   //Read Timing Echo form sensor
  cm = microsecondsToCentimeters(duration);
  return cm;
}

/* Beep */
void Beep(int num){  
   while(num){
    digitalWrite(beep,LOW);             //on beep
    delay(100);
    digitalWrite(beep,HIGH);           //off beep
    delay(100);
    num--;
   }
}
